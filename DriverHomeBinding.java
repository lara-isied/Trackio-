// Generated by view binder compiler. Do not edit!
package com.aau.trakio.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.cardview.widget.CardView;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.aau.trakio.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DriverHomeBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final CoordinatorLayout coordinatorLayout;

  @NonNull
  public final CardView driverHomeCvMap;

  @NonNull
  public final LinearLayout driverHomeLl;

  @NonNull
  public final Toolbar driverHomeToolbar;

  private DriverHomeBinding(@NonNull CoordinatorLayout rootView,
      @NonNull CoordinatorLayout coordinatorLayout, @NonNull CardView driverHomeCvMap,
      @NonNull LinearLayout driverHomeLl, @NonNull Toolbar driverHomeToolbar) {
    this.rootView = rootView;
    this.coordinatorLayout = coordinatorLayout;
    this.driverHomeCvMap = driverHomeCvMap;
    this.driverHomeLl = driverHomeLl;
    this.driverHomeToolbar = driverHomeToolbar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DriverHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DriverHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.driver_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DriverHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      CoordinatorLayout coordinatorLayout = (CoordinatorLayout) rootView;

      id = R.id.driver_home_cv_map;
      CardView driverHomeCvMap = ViewBindings.findChildViewById(rootView, id);
      if (driverHomeCvMap == null) {
        break missingId;
      }

      id = R.id.driver_home_ll;
      LinearLayout driverHomeLl = ViewBindings.findChildViewById(rootView, id);
      if (driverHomeLl == null) {
        break missingId;
      }

      id = R.id.driver_home_toolbar;
      Toolbar driverHomeToolbar = ViewBindings.findChildViewById(rootView, id);
      if (driverHomeToolbar == null) {
        break missingId;
      }

      return new DriverHomeBinding((CoordinatorLayout) rootView, coordinatorLayout, driverHomeCvMap,
          driverHomeLl, driverHomeToolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
