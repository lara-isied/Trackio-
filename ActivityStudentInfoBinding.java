// Generated by view binder compiler. Do not edit!
package com.aau.trakio.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.aau.trakio.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityStudentInfoBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout activityStudentInfo;

  @NonNull
  public final TextView studentInfoAddress;

  @NonNull
  public final Button studentInfoFreezBtn;

  @NonNull
  public final TextView studentInfoLastCheckin;

  @NonNull
  public final TextView studentInfoName;

  @NonNull
  public final TextView studentInfoNumber;

  @NonNull
  public final TextView studentInfoPhone;

  private ActivityStudentInfoBinding(@NonNull LinearLayout rootView,
      @NonNull LinearLayout activityStudentInfo, @NonNull TextView studentInfoAddress,
      @NonNull Button studentInfoFreezBtn, @NonNull TextView studentInfoLastCheckin,
      @NonNull TextView studentInfoName, @NonNull TextView studentInfoNumber,
      @NonNull TextView studentInfoPhone) {
    this.rootView = rootView;
    this.activityStudentInfo = activityStudentInfo;
    this.studentInfoAddress = studentInfoAddress;
    this.studentInfoFreezBtn = studentInfoFreezBtn;
    this.studentInfoLastCheckin = studentInfoLastCheckin;
    this.studentInfoName = studentInfoName;
    this.studentInfoNumber = studentInfoNumber;
    this.studentInfoPhone = studentInfoPhone;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityStudentInfoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityStudentInfoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_student_info, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityStudentInfoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      LinearLayout activityStudentInfo = (LinearLayout) rootView;

      id = R.id.student_info_address;
      TextView studentInfoAddress = ViewBindings.findChildViewById(rootView, id);
      if (studentInfoAddress == null) {
        break missingId;
      }

      id = R.id.student_info_freez_btn;
      Button studentInfoFreezBtn = ViewBindings.findChildViewById(rootView, id);
      if (studentInfoFreezBtn == null) {
        break missingId;
      }

      id = R.id.student_info_last_checkin;
      TextView studentInfoLastCheckin = ViewBindings.findChildViewById(rootView, id);
      if (studentInfoLastCheckin == null) {
        break missingId;
      }

      id = R.id.student_info_name;
      TextView studentInfoName = ViewBindings.findChildViewById(rootView, id);
      if (studentInfoName == null) {
        break missingId;
      }

      id = R.id.student_info_number;
      TextView studentInfoNumber = ViewBindings.findChildViewById(rootView, id);
      if (studentInfoNumber == null) {
        break missingId;
      }

      id = R.id.student_info_phone;
      TextView studentInfoPhone = ViewBindings.findChildViewById(rootView, id);
      if (studentInfoPhone == null) {
        break missingId;
      }

      return new ActivityStudentInfoBinding((LinearLayout) rootView, activityStudentInfo,
          studentInfoAddress, studentInfoFreezBtn, studentInfoLastCheckin, studentInfoName,
          studentInfoNumber, studentInfoPhone);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
